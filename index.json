{
    "content": "<h1 id=\"mkdocs\">MkDocs<a class=\"headerlink\" href=\"#mkdocs\" title=\"Permanent link\">\uf0c1</a></h1>\n<p>Project documentation with&nbsp;Markdown.</p>\n<hr />\n<h2 id=\"overview\">Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>MkDocs is a <strong>fast</strong>, <strong>simple</strong> and <strong>downright gorgeous</strong> static site\ngenerator that's geared towards building project documentation. Documentation\nsource files are written in Markdown, and configured with a single YAML\nconfiguration file.</p>\n<h3 id=\"host-anywhere\">Host anywhere<a class=\"headerlink\" href=\"#host-anywhere\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Builds completely static HTML sites that you can host on GitHub pages, Amazon\nS3, or anywhere else you choose.</p>\n<h3 id=\"great-themes-available\">Great themes available<a class=\"headerlink\" href=\"#great-themes-available\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>There's a stack of good looking themes included by default. Choose from\nbootstrap, readthedocs, or any of the 12 bootswatch themes.</p>\n<h3 id=\"preview-your-site-as-you-work\">Preview your site as you work<a class=\"headerlink\" href=\"#preview-your-site-as-you-work\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>The built-in devserver allows you to preview your documentation as you're\nwriting it. It will even auto-reload whenever you save any changes, so all you\nneed to do to see your latest edits is refresh your browser.</p>\n<h3 id=\"easy-to-customize\">Easy to customize<a class=\"headerlink\" href=\"#easy-to-customize\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Get your project documentation looking just the way you want it by customizing\nthe theme.</p>\n<hr />\n<h2 id=\"installation\">Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>In order to install MkDocs you'll need <a href=\"https://www.python.org/\">Python</a> installed on your system, as\nwell as the Python package manager, <a href=\"http://pip.readthedocs.org/en/latest/installing.html\">pip</a>. You can check if you have these\nalready installed like so:</p>\n<pre><code class=\"bash\">$ python --version\nPython 2.7.2\n$ pip --version\npip 1.5.2\n</code></pre>\n\n<p>MkDocs supports Python 2.6, 2.7, 3.3 and 3.4.</p>\n<p>On Windows we recommend that you install Python and pip with <a href=\"https://chocolatey.org/\">Chocolatey</a>.</p>\n<p>Install the <code>mkdocs</code> package using pip:</p>\n<pre><code class=\"bash\">pip install mkdocs\n</code></pre>\n\n<p>You should now have the <code>mkdocs</code> command installed on your system. Run <code>mkdocs\n--version</code> to check that everything worked okay.</p>\n<pre><code class=\"bash\">$ mkdocs --version\nmkdocs, version 0.14.0\n</code></pre>\n\n<hr />\n<h2 id=\"getting-started\">Getting started<a class=\"headerlink\" href=\"#getting-started\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>Getting started is super easy.</p>\n<pre><code class=\"bash\">mkdocs new my-project\ncd my-project\n</code></pre>\n\n<p>Let's take a moment to review the initial project that's been created for us.</p>\n<p><img alt=\"The initial MkDocs layout\" src=\"./img/initial-layout.png\" /></p>\n<p>There's a single configuration file named <code>mkdocs.yml</code>, and a folder named\n<code>docs</code> that will contain our documentation source files. Right now the <code>docs</code>\nfolder just contains a single documentation page, named <code>index.md</code>.</p>\n<p>MkDocs comes with a built-in webserver that lets you preview your documentation\nas you work on it. We start the webserver by making sure we're in the same\ndirectory as the <code>mkdocs.yml</code> config file, and then running the <code>mkdocs serve</code>\ncommand:</p>\n<pre><code class=\"bash\">$ mkdocs serve\nRunning at: http://127.0.0.1:8000/\n</code></pre>\n\n<p>Open up <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a> in your browser, and\nyou'll see the index page being displayed:</p>\n<p><img alt=\"The MkDocs live server\" src=\"./img/screenshot.png\" /></p>\n<p>The webserver also supports auto-reloading, and will rebuild your documentation\nwhenever anything in the configuration file, documentation directory or theme\ndirectory changes.</p>\n<p>Go ahead and edit the <code>docs/index.md</code> file now and save the file. Then simply\nhit reload in the browser and you'll see your updated documentation.</p>\n<p>Now's also a good time to edit the configuration file, <code>mkdocs.yml</code>. Change the\n<code>site_name</code> setting to something else and save the file.</p>\n<p><img alt=\"Editing the config file\" src=\"./img/initial-config.png\" /></p>\n<p>Once you hit reload in the browser you'll see your new site name take effect.</p>\n<p><img alt=\"The site_name setting\" src=\"./img/site-name.png\" /></p>\n<h2 id=\"adding-pages\">Adding pages<a class=\"headerlink\" href=\"#adding-pages\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>Go ahead and edit the <code>docs/index.md</code> document, and change the initial heading to\n<code>MkLorum</code>, then reload the site in your browser, and you should see the change\ntake effect immediately.</p>\n<p>Let's also add a second page to our documentation:</p>\n<pre><code class=\"bash\">curl 'jaspervdj.be/lorem-markdownum/markdown.txt' &gt; docs/about.md\n</code></pre>\n\n<p>We'd like our documentation site to include some navigation headers, so we'll\nedit the configuration file and add some information about the order and title\nto use for out headers:</p>\n<pre><code class=\"no-highlight\">site_name: MkLorum\npages:\n- Home: index.md\n- About: about.md\n</code></pre>\n\n<p>Refresh the browser and you'll now see a navigation bar with <code>Home</code> and <code>About</code>\nheaders.</p>\n<h2 id=\"theming-our-documentation\">Theming our documentation<a class=\"headerlink\" href=\"#theming-our-documentation\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>While we're here can also change the configuration file to alter how the\ndocumentation is displayed. Let's go ahead and change the theme. Edit the\n<code>mkdocs.yml</code> file to the following:</p>\n<pre><code class=\"no-highlight\">site_name: MkLorum\npages:\n- Home: index.md\n- About: about.md\ntheme: readthedocs\n</code></pre>\n\n<p>Refresh the browser again, and you'll now see the ReadTheDocs theme being used.</p>\n<p><img alt=\"Screenshot\" src=\"./img/readthedocs.png\" /></p>\n<h2 id=\"building-the-site\">Building the site<a class=\"headerlink\" href=\"#building-the-site\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>That's looking good. We're ready to deploy the first pass of our <code>MkLorum</code>\ndocumentation now. Let's build the documentation.</p>\n<pre><code class=\"bash\">mkdocs build\n</code></pre>\n\n<p>This will create a new directory, named <code>site</code>. Let's take a look inside the\ndirectory:</p>\n<pre><code class=\"bash\">ls site\nabout css fonts img index.html js\n</code></pre>\n\n<p>Notice that our source documentation has been output as two HTML files named\n<code>index.html</code> and <code>about/index.html</code>. We also have various other media that's\nbeen copied into the <code>site</code> directory as part of the documentation theme.</p>\n<p>If you're using source code control such as <code>git</code> you probably don't want to\ncheck your documentation builds into the repository. Add a line containing\n<code>site/</code> to your <code>.gitignore</code> file.</p>\n<pre><code class=\"bash\">echo &quot;site/&quot; &gt;&gt; .gitignore\n</code></pre>\n\n<p>If you're using another source code control you'll want to check it's\ndocumentation on how to ignore specific directories.</p>\n<p>After some time, files may be removed from the documentation but they will still\nreside in the <code>site</code> directory. To remove those stale files, just run mkdocs\nwith the <code>--clean</code> switch.</p>\n<pre><code class=\"bash\">mkdocs build --clean\n</code></pre>\n\n<h2 id=\"other-commands-and-options\">Other Commands and Options<a class=\"headerlink\" href=\"#other-commands-and-options\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>There are various other commands and options available. For a complete list of\ncommands, use the <code>--help</code> flag:</p>\n<pre><code class=\"bash\">mkdocs --help\n</code></pre>\n\n<p>To view a list of options available on a given command, use the <code>--help</code> flag\nwith that command. For example, to get a list of all options available for the\n<code>build</code> command run the following:</p>\n<pre><code class=\"bash\">mkdocs build --help\n</code></pre>\n\n<h2 id=\"deploying\">Deploying<a class=\"headerlink\" href=\"#deploying\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>The documentation site that we've just built only uses static files so you'll be\nable to host it from pretty much anywhere. <a href=\"https://help.github.com/articles/creating-project-pages-manually\">GitHub project pages</a> and <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Amazon\nS3</a> are good hosting options. Upload the contents of the entire <code>site</code> directory\nto wherever you're hosting your website from and you're done. For specific\ninstructions for a number of common hosts, see the <a href=\"user-guide/deploying-your-docs/\">Deploying your Docs</a> page.</p>\n<h2 id=\"getting-help\">Getting help<a class=\"headerlink\" href=\"#getting-help\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>To get help with MkDocs, please use the <a href=\"https://groups.google.com/forum/#!forum/mkdocs\">discussion group</a>, <a href=\"https://github.com/mkdocs/mkdocs/issues\">GitHub issues</a> or\nthe MkDocs IRC channel <code>#mkdocs</code> on freenode.</p>", 
    "url": "/", 
    "language": "en", 
    "title": "Home"
}