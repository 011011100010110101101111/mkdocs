{
    "content": "<h1 id=\"configuration\">Configuration<a class=\"headerlink\" href=\"#configuration\" title=\"Permanent link\">\uf0c1</a></h1>\n<p>Guide to all available configuration settings.</p>\n<hr />\n<h2 id=\"introduction\">Introduction<a class=\"headerlink\" href=\"#introduction\" title=\"Permanent link\">\uf0c1</a></h2>\n<p>Project settings are always configured by using a YAML configuration file in the\nproject directory named <code>mkdocs.yml</code>.</p>\n<p>As a minimum this configuration file must contain the <code>site_name</code> setting. All\nother settings are optional.</p>\n<h2 id=\"project-information\">Project information<a class=\"headerlink\" href=\"#project-information\" title=\"Permanent link\">\uf0c1</a></h2>\n<h3 id=\"site_name\">site_name<a class=\"headerlink\" href=\"#site_name\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>This is a <strong>required setting</strong>, and should be a string that is used as the main\ntitle for the project documentation. For example:</p>\n<pre><code class=\"yaml\">site_name: Marshmallow Generator\n</code></pre>\n\n<p>When rendering the theme this setting will be passed as the <code>site_name</code> context\nvariable.</p>\n<h3 id=\"site_url\">site_url<a class=\"headerlink\" href=\"#site_url\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the canonical URL of the site. This will add a link tag with the canonical\nURL to the generated HTML header.</p>\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"repo_url\">repo_url<a class=\"headerlink\" href=\"#repo_url\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>When set, provides a link to your GitHub or Bitbucket repository on each page.</p>\n<pre><code class=\"yaml\">repo_url: https://github.com/example/repository/\n</code></pre>\n\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"repo_name\">repo_name<a class=\"headerlink\" href=\"#repo_name\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>When set, provides a link to your GitHub or Bitbucket repository on each page.</p>\n<p><strong>default</strong>: <code>'GitHub'</code> or <code>'Bitbucket'</code> if the <code>repo_url</code> matches those\ndomains, otherwise <code>null</code></p>\n<h3 id=\"site_description\">site_description<a class=\"headerlink\" href=\"#site_description\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the site description. This will add a meta tag to the generated HTML header.</p>\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"site_author\">site_author<a class=\"headerlink\" href=\"#site_author\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the name of the author. This will add a meta tag to the generated HTML\nheader.</p>\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"site_favicon\">site_favicon<a class=\"headerlink\" href=\"#site_favicon\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the favicon to use. Putting a <code>favicon.ico</code> into the <code>docs/</code> directory, the\nconfig would look as follows:</p>\n<pre><code class=\"yaml\">site_favicon: favicon.ico\n</code></pre>\n\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"copyright\">copyright<a class=\"headerlink\" href=\"#copyright\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the copyright information to be included in the documentation by the theme.</p>\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"google_analytics\">google_analytics<a class=\"headerlink\" href=\"#google_analytics\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the Google analytics tracking configuration.</p>\n<pre><code class=\"yaml\">google_analytics: ['UA-36723568-3', 'mkdocs.org']\n</code></pre>\n\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"remote_branch\">remote_branch<a class=\"headerlink\" href=\"#remote_branch\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the remote branch to commit to when using <code>gh-deploy</code> to deploy to Github\nPages. This option can be overridden by a command line option in <code>gh-deploy</code>.</p>\n<p><strong>default</strong>: <code>gh-pages</code></p>\n<h3 id=\"remote_name\">remote_name<a class=\"headerlink\" href=\"#remote_name\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set the remote name to push to when using <code>gh-deploy</code> to deploy to Github Pages.\nThis option can be overridden by a command line option in <code>gh-deploy</code>.</p>\n<p><strong>default</strong>: <code>gh-pages</code></p>\n<h2 id=\"documentation-layout\">Documentation layout<a class=\"headerlink\" href=\"#documentation-layout\" title=\"Permanent link\">\uf0c1</a></h2>\n<h3 id=\"pages\">pages<a class=\"headerlink\" href=\"#pages\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>This setting is used to determine the set of pages that should be built for the\ndocumentation. For example, the following would create Introduction, User Guide\nand About pages, given the three source files <code>index.md</code>, <code>user-guide.md</code> and\n<code>about.md</code>, respectively.</p>\n<pre><code class=\"yaml\">pages:\n    - 'Introduction': 'index.md'\n    - 'User Guide': 'user-guide.md'\n    - 'About': 'about.md'\n</code></pre>\n\n<p>See the section on <a href=\"../writing-your-docs/#configure-pages-and-navigation\">configuring pages and\nnavigation</a> for\na more detailed breakdown, including how to create sub-sections.</p>\n<h2 id=\"build-directories\">Build directories<a class=\"headerlink\" href=\"#build-directories\" title=\"Permanent link\">\uf0c1</a></h2>\n<h3 id=\"theme\">theme<a class=\"headerlink\" href=\"#theme\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Sets the theme of your documentation site, for a list of available themes visit\n<a href=\"../styling-your-docs/\">styling your docs</a>.</p>\n<p><strong>default</strong>: <code>'mkdocs'</code></p>\n<h3 id=\"theme_dir\">theme_dir<a class=\"headerlink\" href=\"#theme_dir\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Lets you set a directory to a custom theme. This can either be a relative\ndirectory, in which case it is resolved relative to the directory containing\nyour configuration file, or it can be an absolute directory path.</p>\n<p>See <a href=\"../styling-your-docs/#custom-themes\">styling your docs</a> for an explanation\nof custom themes.</p>\n<p><strong>default</strong>: <code>null</code></p>\n<h3 id=\"docs_dir\">docs_dir<a class=\"headerlink\" href=\"#docs_dir\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Lets you set the directory containing the documentation source markdown files.\nThis can either be a relative directory, in which case it is resolved relative\nto the directory containing you configuration file, or it can be an absolute\ndirectory path.</p>\n<p><strong>default</strong>: <code>'docs'</code></p>\n<h3 id=\"site_dir\">site_dir<a class=\"headerlink\" href=\"#site_dir\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Lets you set the directory where the output HTML and other files are created.\nThis can either be a relative directory, in which case it is resolved relative\nto the directory containing you configuration file, or it can be an absolute\ndirectory path.</p>\n<p><strong>default</strong>: <code>'site'</code></p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note:</p>\n<p>If you are using source code control you will normally want to ensure that\nyour <em>build output</em> files are not committed into the repository, and only\nkeep the <em>source</em> files under version control. For example, if using <code>git</code>\nyou might add the following line to your <code>.gitignore</code> file:</p>\n<pre><code>site/\n</code></pre>\n<p>If you're using another source code control tool, you'll want to check its\ndocumentation on how to ignore specific directories.</p>\n</div>\n<h3 id=\"extra_css\">extra_css<a class=\"headerlink\" href=\"#extra_css\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set a list of CSS files to be included by the theme. For example, the\nfollowing example will include the the extra.css file within the css\nsubdirectory in your <a href=\"#docs_dir\">docs_dir</a>.</p>\n<pre><code class=\"yaml\">extra_css:\n    - css/extra.css\n    - css/second_extra.css\n</code></pre>\n\n<p><strong>default</strong>: By default <code>extra_css</code> will contain a list of all the CSS files\nfound within the <code>docs_dir</code>, if none are found it will be <code>[]</code> (an empty list).</p>\n<h3 id=\"extra_javascript\">extra_javascript<a class=\"headerlink\" href=\"#extra_javascript\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set a list of JavaScript files to be included by the theme. See the example\nin <a href=\"#extra_css\">extra_css</a> for usage.</p>\n<p><strong>default</strong>: By default <code>extra_javascript</code> will contain a list of all the\nJavaScript files found within the <code>docs_dir</code>, if none are found it will be <code>[]</code>\n(an empty list).</p>\n<h3 id=\"extra_templates\">extra_templates<a class=\"headerlink\" href=\"#extra_templates\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Set a list of templates to be built by MkDocs. To see more about writing\ntemplates for MkDocs read the documentation about <a href=\"../styling-your-docs/#custom-themes\">custom themes</a> and\nspecifically the section about the <a href=\"../styling-your-docs/#global-context\">variables that are available</a> to templates.\nSee the example in <a href=\"#extra_css\">extra_css</a> for usage.</p>\n<p><strong>default</strong>: Unlike extra_css and extra_javascript, by default <code>extra_templates</code>\nwill be <code>[]</code> (an empty list).</p>\n<h3 id=\"extra\">extra<a class=\"headerlink\" href=\"#extra\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>A set of key value pairs, where the values can be any valid YAML construct, that\nwill be passed to the template. This allows for great flexibility when creating\ncustom themes.</p>\n<p>For example, if you are using a theme that supports displaying the project\nversion, you can pass it to the theme like this:</p>\n<pre><code class=\"yaml\">extra:\n    version: 1.0\n</code></pre>\n\n<p><strong>default</strong>: By default <code>extra</code> will be an empty key value mapping.</p>\n<h2 id=\"preview-controls\">Preview controls<a class=\"headerlink\" href=\"#preview-controls\" title=\"Permanent link\">\uf0c1</a></h2>\n<h3 id=\"use_directory_urls\">use_directory_urls<a class=\"headerlink\" href=\"#use_directory_urls\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>This setting controls the style used for linking to pages within the\ndocumentation.</p>\n<p>The following table demonstrates how the URLs used on the site differ when\nsetting <code>use_directory_urls</code> to <code>true</code> or <code>false</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Source file</th>\n<th>Generated HTML</th>\n<th>use_directory_urls=true</th>\n<th>use_directory_urls=false</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index.md</td>\n<td>index.html</td>\n<td>/</td>\n<td>/index.html</td>\n</tr>\n<tr>\n<td>api-guide.md</td>\n<td>api-guide/index.html</td>\n<td>/api-guide/</td>\n<td>/api-guide/index.html</td>\n</tr>\n<tr>\n<td>about.md</td>\n<td>about/index.html</td>\n<td>/about/</td>\n<td>/about/index.html</td>\n</tr>\n</tbody>\n</table>\n<p>The default style of <code>use_directory_urls=true</code> creates more user friendly URLs,\nand is usually what you'll want to use.</p>\n<p>The alternate style can occasionally be useful if you want your documentation to\nremain properly linked when opening pages directly from the file system, because\nit create links that point directly to the target <em>file</em> rather than the target\n<em>directory</em>.</p>\n<p><strong>default</strong>: <code>true</code></p>\n<h3 id=\"strict\">strict<a class=\"headerlink\" href=\"#strict\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Determines if a broken link to a page within the documentation is considered a\nwarning or an error (link to a page not listed in the pages setting). Set to\ntrue to halt processing when a broken link is found, false prints a warning.</p>\n<p><strong>default</strong>: <code>false</code></p>\n<h3 id=\"dev_addr\">dev_addr<a class=\"headerlink\" href=\"#dev_addr\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>Determines the address used when running <code>mkdocs serve</code>. Setting this allows you\nto use another port, or allows you to make the service accessible over your\nlocal network by using the <code>0.0.0.0</code> address.</p>\n<p>As with all settings, you can set this from the command line, which can be\nuseful, for example:</p>\n<pre><code class=\"bash\">mkdocs serve --dev-addr=0.0.0.0:80  # Run on port 80, on the local network.\n</code></pre>\n\n<p><strong>default</strong>: <code>'127.0.0.1:8000'</code></p>\n<h2 id=\"formatting-options\">Formatting options<a class=\"headerlink\" href=\"#formatting-options\" title=\"Permanent link\">\uf0c1</a></h2>\n<h3 id=\"markdown_extensions\">markdown_extensions<a class=\"headerlink\" href=\"#markdown_extensions\" title=\"Permanent link\">\uf0c1</a></h3>\n<p>MkDocs uses the <a href=\"http://pythonhosted.org/Markdown/\">Python Markdown</a> library to translate Markdown files\ninto HTML. Python Markdown supports a variety of <a href=\"http://pythonhosted.org/Markdown/extensions/index.html\">extensions</a>\nthat customize how pages are formatted. This setting lets you enable a list of\nextensions beyond the ones that MkDocs uses by default (<code>meta</code>, <code>toc</code>, <code>tables</code>,\nand <code>fenced_code</code>).</p>\n<p>For example, to enable the <a href=\"https://pythonhosted.org/Markdown/extensions/smarty.html\">SmartyPants typography extension</a>, use:</p>\n<pre><code class=\"yaml\">markdown_extensions:\n    - smarty\n</code></pre>\n\n<p>Some extensions provide configuration options of their own. If you would like to\nset any configuration options, then you can nest a key/value mapping\n(<code>option_name: option value</code>) of any options that a given extension supports.\nSee the documentation for the extension you are using to determine what options\nthey support.</p>\n<p>For example, to enable permalinks in the (included) <code>toc</code> extension, use:</p>\n<pre><code class=\"yaml\">markdown_extensions:\n    - toc:\n        permalink: True\n</code></pre>\n\n<p>Note that a colon (<code>:</code>) must follow the extension name (<code>toc</code>) and then on a new\nline the option name and value must be indented and seperated by a colon. If you\nwould like to define multipe options for a single extension, each option must be\ndefined on a seperate line:</p>\n<pre><code class=\"yaml\">markdown_extensions:\n    - toc:\n        permalink: True\n        separator: &quot;_&quot;\n</code></pre>\n\n<p>Add an additional item to the list for each extension. If you have no\nconfiguration options to set for a specific extension, then simply omit options\nfor that extension:</p>\n<pre><code class=\"yaml\">markdown_extensions:\n    - smarty\n    - toc:\n        permalink: True\n    - sane_lists\n</code></pre>\n\n<div class=\"admonition note\">\n<p class=\"admonition-title\">See Also:</p>\n<p>The Python-Markdown documentation provides a <a href=\"https://pythonhosted.org/Markdown/extensions/index.html\">list of extensions</a>\nwhich are available out-of-the-box. For a list of configuration options\navailable for a given extension, see the documentation for that extension.</p>\n<p>You may also install and use various <a href=\"https://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions\">third party extensions</a>. Consult\nthe documentation provided by those extensions for installation instructions\nand available configuration options.</p>\n</div>\n<p><strong>default</strong>: <code>[]</code></p>", 
    "url": "/user-guide/configuration/", 
    "language": "en", 
    "title": "Configuration"
}